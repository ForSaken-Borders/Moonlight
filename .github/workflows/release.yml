on:
  release:
    types: ["published"]

env:
  DOTNET_NOLOGO: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1

jobs:
  release:
    name: Publish Release
    runs-on: self-hosted
    if: "!contains(format('{0} {1}', github.event.head_commit.message, github.event.pull_request.title), '[ci-skip]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          submodules: 'recursive'
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7
      - name: Build
        run: "./tools/release.sh ${{ github.event.release.tag_name }} ${{ secrets.NUGET_ORG_API_KEY }}"
      - name: Upload Nuget Packages To Github Actions
        uses: actions/upload-artifact@v3
        with:
          name: Moonlight-${{ github.event.release.tag_name }}.zip
          path: build/*
      - name: Upload Nuget Packages To Github Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: build/*
          token: ${{ secrets.GITHUB_TOKEN }}
          omitBodyDuringUpdate: true # We don't want to update the body of the release.
          omitNameDuringUpdate: true # We don't want to update the name of the release.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner  }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/forsaken-borders/moonlight:latest
            ghcr.io/forsaken-borders/moonlight:${{ github.event.release.tag_name }}